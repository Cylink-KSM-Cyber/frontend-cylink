name: Build and Push to Staging

on:
  push:
    branches: [ staging ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Generate .env file for build stage
      run: |
        echo "NEXT_PUBLIC_BASE_API_URL=${{ secrets.STAGING_NEXT_PUBLIC_BASE_API_URL }}" > .env
        echo "NEXT_PUBLIC_POSTHOG_KEY=${{ secrets.NEXT_PUBLIC_POSTHOG_KEY }}" >> .env
        echo "NEXT_PUBLIC_POSTHOG_HOST=${{ secrets.NEXT_PUBLIC_POSTHOG_HOST }}" >> .env

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./
        file: ./docker/admin/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_APP_ID }}:staging
        no-cache: true
    
    - name: Create .env file from secrets for Docker
      uses: 0ndt/envfile@v2
      with:
        secrets: ${{ toJSON(secrets) }}
        exclude: DEPLOYMENT_*, PRODUCTION_*
    
    - name: Upload .env to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DEPLOYMENT_HOST }}
        port: ${{ secrets.DEPLOYMENT_PORT }}
        username: ${{ secrets.DEPLOYMENT_USER }}
        key: |
          ${{ secrets.DEPLOYMENT_SSH_KEY }}
        source: ".env"
        target: "/opt/${{ secrets.DOCKERHUB_APP_ID }}/staging"
    
    - name: Deploy to Deployment Server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOYMENT_HOST }}
        port: ${{ secrets.DEPLOYMENT_PORT }}
        username: ${{ secrets.DEPLOYMENT_USER }}
        key: |
          ${{ secrets.DEPLOYMENT_SSH_KEY }}
        script: |
          cd /opt/${{ secrets.DOCKERHUB_APP_ID }}/staging
          git fetch origin
          git reset --hard origin/staging
          git clean -fd

          # Remove prefix
          sed -i 's/^STAGING_//g' .env

          docker-compose -p ${{ secrets.DOCKERHUB_APP_ID }}-staging -f docker-compose.yml -f docker-compose.staging.yml up -d --force-recreate --pull always
          docker system prune -af
